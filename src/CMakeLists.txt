aux_source_directory(./testcase-lib testsrc)
aux_source_directory(./testtools-lib toolsrc)
aux_source_directory(./judge-lib judgesrc)

find_package(fmt CONFIG REQUIRED)
link_libraries(fmt::fmt-header-only)

if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	find_package(Boost CONFIG REQUIRED COMPONENTS stacktrace_backtrace thread)
else()
	find_package(Boost CONFIG REQUIRED COMPONENTS stacktrace_windbg thread)
endif()

add_library(system-lib STATIC ./system-lib/${CMAKE_SYSTEM_NAME}.cpp ./system-lib/common.cpp)
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
	target_link_libraries(system-lib PUBLIC rt)
endif()
install(TARGETS system-lib DESTINATION lib/) 

add_library(testtools-lib STATIC ${toolsrc})
target_link_libraries(testtools-lib system-lib)

add_library(testcase-tra STATIC ${testsrc})
target_link_libraries(testcase-tra PRIVATE testtools-lib)
add_library(testcase-int STATIC ${testsrc})
target_compile_definitions(testcase-int PRIVATE Interact)
target_link_libraries(testcase-int PRIVATE testtools-lib)

add_library(judge-lib STATIC ${judgesrc})
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
	target_compile_definitions(judge-lib PUBLIC BOOST_STACKTRACE_USE_BACKTRACE)
	target_link_libraries(judge-lib PRIVATE Boost::stacktrace_backtrace system-lib)
else()
	target_link_libraries(judge-lib PRIVATE Boost::stacktrace_windbg system-lib)
endif()
install(TARGETS judge-lib DESTINATION lib/)

function(add_target target_name src extra)
	add_executable(${target_name}-tra ${src})
	add_executable(${target_name}-int ${src}) 
	target_link_libraries(${target_name}-tra testcase-tra ${extra})
	target_link_libraries(${target_name}-int testcase-int ${extra})
	target_compile_definitions(${target_name}-int PRIVATE Interact)
	install(TARGETS ${target_name}-int DESTINATION bin/)
	install(TARGETS ${target_name}-tra DESTINATION bin/)
endfunction()

add_target(single singletest.cpp "")
add_target(group grouptest.cpp "")
add_target(random randomtest.cpp Boost::thread)

add_executable(diff autodiff.cpp)
target_link_libraries(diff testtools-lib system-lib)
install(TARGETS diff DESTINATION bin/)

add_subdirectory(init-lib)
add_executable(init init.cpp)
target_link_libraries(init configs)
install(TARGETS init DESTINATION .)
